%h1#top Lesson 014 [ Chrome, APIs-Explorer: Google API Web-UI ]

%p Google offers many online products, Gmail for example.

%p Most people use a browser to interact with the products.

%p But Google allows us to write software which can interact with the products via Google APIs.

%p When I write software to interact with a Google API, I often encounter syntax, "How-to" questions.

%p Google offers the Google APIs-Explorer which I see as a Web-UI tool I can use to answer "How-to" questions.

%p This page offers some information I learned while training myself to use APIs-Explorer.

%p I started this lesson by logging into Gmail.

%p Next, I visited the URL listed below:

%a(target='g' href='https://console.developers.google.com') https://console.developers.google.com

%p The page wanted me to create a project (because I had no projects yet.)

%p If you visit the above page, and you already have a project you should see info about that project.

%p Otherwise the page will encourage you to create your first project.

%p The default name of your first project is: "My First Project".

%p What is a Project?

%p I see a Project as a named container of information which I can see with my browser.

%p So a Project is like a folder or a file full of information.

%p So, I created a project, "dan-project1", and waited two minutes for the project to appear:

%img(src='/lesson014/lesson013g.png')
%hr/

%p On the left, I clicked the Library link.

%p Google served me the Library-page:

%img(src='/lesson014/lesson013h.png')
%hr/

%p At the lower left I clicked the square: "Google Drive API".

%p Google served me a page:

%img(src='/lesson014/lesson013i.png')
%hr/

%p I clicked the blue-button: "ENABLE".

%p Google enabled the API for me and then served me a page:

%img(src='/lesson014/lesson013j.png')
%hr/

%p At this point I was ready to use APIs-Explorer which I started by visiting the URL listed below:

%p
  %a(target='g' href='https://developers.google.com/apis-explorer') https://developers.google.com/apis-explorer

%p Google served me a page:

%img(src='/lesson014/lesson014a.png')
%hr/

%p It is obvious from that page that Google offers many APIs.

%p I used the search field to search for the Explorer for the Google-Drive API.

%p The URL for that Explorer is listed below:

%p
  %a(target='g' href='https://developers.google.com/apis-explorer/#p/drive/v3/')
    https://developers.google.com/apis-explorer/#p/drive/v3/

%p After I visited the above URL, Google served me a page:

%img(src='/lesson014/lesson014b.png')
%hr/

%p I noticed a link to the API call, drive.files.create:

%img(src='/lesson014/lesson014c.png')
%hr/

%p I clicked that link, drive.files.create, and Google served me a page to explore that API call:

%img(src='/lesson014/lesson014d.png')
%hr/

%p I left all fields blank and clicked the blue-button: "Authorize and execute".

%p Google served me a page:

%img(src='/lesson014/lesson014e.png')
%hr/

%p I was happy with the choices Google made for me on that page so I clicked the blue-button: "Authorize and execute".

%p Something in the page or server, JavaScript I assume, made the API call, drive.files.create.

%p I had supplied no data to the drive.files.create so I was worried it would fail.

%p The API sever responded.

%p A div-element at the bottom of the page captured the response and served it to my browser so I could see it:

%img(src='/lesson014/lesson014g.png')
%hr/

%p The call succeeded.

%p It created a file named: "Untitled".

%p I compared that response to a Python script I wrote in lesson 013: gdrive13.py

%p In that script, I used Python syntax to make a similar call:

.syntax
  %pre
    =render 'lesson014h_gdrive13'

%p I wanted to use the API Explorer to make a call similar to the above Python.

%p I returned to this URL:

%p
  %a(target='g' href='https://developers.google.com/apis-explorer/#p/drive/v3/')
    https://developers.google.com/apis-explorer/#p/drive/v3/

%p There, I clicked the link, drive.files.create, and Google served me a page to explore that API call:

%img(src='/lesson014/lesson014d.png')
%hr/

%p The Python script called googleapiclient.http.MediaFileUpload().

%p The form for drive.files.create does not try to mimic that call.

%p Aside from MediaFileUpload(), I did find three matches so I entered them into the form:

%img(src='/lesson014/lesson014i.png')
%hr/

%p I clicked the blue-"Execute" button.

%p The page displayed information about both the request and the response:

%img(src='/lesson014/lesson014j.png')
%hr/

%p In lesson 013, the Python script, gdrive13.py, made another call to the Google Drive API:

.syntax
  %pre
    =render 'lesson014h_gdrive13b'

%p I wanted to use the API Explorer to make a similar call.

%p I returned to this URL:

%p
  %a(target='g' href='https://developers.google.com/apis-explorer/#p/drive/v3/')
    https://developers.google.com/apis-explorer/#p/drive/v3/


%p There, I clicked the link, drive.files.list, and Google served me a form to explore that API call:

%img(src='/lesson014/lesson014k.png')
%hr/

%p Using gdrive13.py as a guide I filled out the form:

%img(src='/lesson014/lesson014l.png')
%hr/

%p I clicked the blue-"Execute" button.

%p The page displayed information about both the request and the response:

%img(src='/lesson014/lesson014m.png')
%hr/

%p The server did execute the call, but it did not return what I expected.

%p I expected to see information about file named: 'hello.txt' which I had recently created.

%p Perhaps I placed incorrect syntax in the "q-field"?

%p For that field, the form suggests: See the "Search for Files" guide for supported syntax.

%p What is the URL for "Search for Files" guide?

%p I asked google:

%p
  %a(target='g' href='https://www.google.com/search?q=google+drive+search+for+files+guide')
    https://www.google.com/search?q=google+drive+search+for+files+guide

%p Google sent me here:

%p
  %a(target='g' href='https://developers.google.com/drive/api/v3/reference/query-ref')
    https://developers.google.com/drive/api/v3/reference/query-ref

%p There, the guide told me that the pattern for the q-field is: name=string

%p That is what I had typed so then I asked, how to search for all files?

%p The answer is, just leave the q-field blank.

%p I tried that idea and eventually I learned that earlier I had not created a file named hello.txt.

%p I had created: hello.txt"

%p If you carefully study the content above, you will see an image of the form I had used to make that syntax mistake.

%p Here is output from me leaving the q-field blank:

%img(src='/lesson014/lesson014n.png')
%hr/

%p In the above output I saw a file named "Untitled" with this id: 115USWytheVYr3rBf2VdPTP4qUg6WzH3L

%p I wanted to delete it.

%p I returned to this URL:

%p
  %a(target='g' href='https://developers.google.com/apis-explorer/#p/drive/v3/')
    https://developers.google.com/apis-explorer/#p/drive/v3/


%p There, I clicked the link, drive.files.delete, and Google served me a form to explore that API call:

%img(src='/lesson014/lesson014o.png')
%hr/

%p I entered id: 115USWytheVYr3rBf2VdPTP4qUg6WzH3L and clicked the blue-"Execute" button.

%p The API responed with a 204-code:

%img(src='/lesson014/lesson014p.png')
%hr/

%p I used the drive.files.list form to look for file with id: 115USWytheVYr3rBf2VdPTP4qUg6WzH3L

%p It was gone. Yay!

%img(src='/lesson014/lesson014q.png')
%hr/

%p Next, I deleted these files:
%ul
  %li "id": "1XZrbYRKNDCpSDERQJHyUgKJK6brVprXk",
  %li "id": "1qr--9a8srY8Fx9bqhWgS5D47cyA7lrDd",
  %li "id": "1u_86dXJOpxvmJx78bL0ygbJ7qAoZfpCt",

%p Then, I saw this:

%img(src='/lesson014/lesson014r.png')
%hr/

%p The above page showed that I had only one file: 1Vj_zxPczKX1biLwCJrUxRJ2Q5YweFsX_

%p I was curious about its permissions.

%p I returned to this URL:

%p
  %a(target='g' href='https://developers.google.com/apis-explorer/#p/drive/v3/')
    https://developers.google.com/apis-explorer/#p/drive/v3/

%p There, I clicked the link, drive.permissions.list, and Google served me a form to explore that API call:

%img(src='/lesson014/lesson014s.png')
%hr/

%p I filled out the form:

%img(src='/lesson014/lesson014t.png')
%hr/

%p I clicked the blue-"Execute" button.

%p The API responded:

%img(src='/lesson014/lesson014u.png')
%hr/

%p I interpreted the above output to mean that the file was owned by its user.

%p Q: How to update the permissions so that the file is readable by anyone?

%p With tool-tips in the form, I learned that readable by anyone was this permission combo:

%ul
  %li role: reader
  %li type: anyone

%img(src='/lesson014/lesson014v.png')
%hr/

%p I returned to this URL:

%p
  %a(target='g' href='https://developers.google.com/apis-explorer/#p/drive/v3/')
    https://developers.google.com/apis-explorer/#p/drive/v3/

%p There, I clicked the link, drive.permissions.create, and Google served me a form to explore that API call:

%img(src='/lesson014/lesson014w.png')
%hr/

%p I filled out the form with my best guesses:

%img(src='/lesson014/lesson014x.png')
%hr/

%p I clicked the blue-"Execute" button.

%p The API responded:

%img(src='/lesson014/lesson014y.png')
%hr/

%p I was curious, did I change its permissions?

%p I returned to this URL:

%p
  %a(target='g' href='https://developers.google.com/apis-explorer/#p/drive/v3/')
    https://developers.google.com/apis-explorer/#p/drive/v3/

%p There, I clicked the link, drive.permissions.list, and Google served me a form to explore that API call:

%img(src='/lesson014/lesson014s.png')
%hr/

%p I filled out the form:

%img(src='/lesson014/lesson014t.png')
%hr/

%p I clicked the blue-"Execute" button.

%p The API responded:

%img(src='/lesson014/lesson014z.png')
%hr/

%p I interpreted the above output to mean that anyone could read the file and that the Google Drive user who created the file still acted as the owner.

%p Q: If anyone can read it, what would be the URL anyone could use to read it?

%p To answer, I returned to this URL:

%p
  %a(target='g' href='https://developers.google.com/apis-explorer/#p/drive/v3/')
    https://developers.google.com/apis-explorer/#p/drive/v3/

%p There, I clicked the link, drive.files.get, and Google served me a form to explore that API call:

%img(src='/lesson014/lesson014z10.png')
%hr/

%p After I filled out the form, I clicked the blue-"Execute" button.

%p The API responded:

%img(src='/lesson014/lesson014z11.png')
%hr/

%p Q: Can I download either of the above links using curl or wget?

%p I tried some Bash commands:

.syntax
  %pre
    %code.bash
      cd /tmp/
      wget 'https://drive.google.com/uc?id=1Vj_zxPczKX1biLwCJrUxRJ2Q5YweFsX_&export=download'      -O file1.jpg
      wget 'https://drive.google.com/file/d/1Vj_zxPczKX1biLwCJrUxRJ2Q5YweFsX_/view?usp=drivesdk'   -O file2.jpg
      curl -L 'https://drive.google.com/uc?id=1Vj_zxPczKX1biLwCJrUxRJ2Q5YweFsX_&export=download'    > file3.jpg
      curl -L 'https://drive.google.com/file/d/1Vj_zxPczKX1biLwCJrUxRJ2Q5YweFsX_/view?usp=drivesdk' > file4.jpg
      ls -la /tmp/file?.jpg
      file   /tmp/file?.jpg

%p I saw this
.syntax
  %pre
    =render 'lesson014z12'

%p Based on the above output, I should ask the public to use this URL to get the file:
%p
  %a(target='g' href='https://drive.google.com/uc?id=1Vj_zxPczKX1biLwCJrUxRJ2Q5YweFsX_&export=download')
    https://drive.google.com/uc?id=1Vj_zxPczKX1biLwCJrUxRJ2Q5YweFsX_&export=download
%p Also I find it very convenient that the file-id assigned by the API can be used by the public.

%p In Python, if I have the file-id, I can easily create a URL-string with syntax like this:

.syntax
  %pre
    %code.python
      file_id = '1Vj_zxPczKX1biLwCJrUxRJ2Q5YweFsX_'
      url_s = 'https://drive.google.com/uc?id='+file_id+'&export=download'
      print(url_s)

%p I should note that I tried this URL in my browser:

%p
  %a(target='g' href='https://drive.google.com/file/d/1Vj_zxPczKX1biLwCJrUxRJ2Q5YweFsX_/view?usp=drivesdk')
    https://drive.google.com/file/d/1Vj_zxPczKX1biLwCJrUxRJ2Q5YweFsX_/view?usp=drivesdk

%p The browser assumed that I wanted to open the file in Google-docs:

%img(src='/lesson014/lesson014z13.png')
%hr/


