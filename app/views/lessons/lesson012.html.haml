%h1#top Lesson 012 [ Chrome, GCP, Bash, Python ]

%p I started this lesson by using a Chrome browser to login to my gmail account.

%p Next, to make Google happy, I pulled a credit-card out of my wallet.

%p Then, I tried to get the $300 GCP Free Trial:

%p
  %a(href="https://console.developers.google.com/freetrial") https://console.developers.google.com/freetrial


%p After some unfriendly behavior from the credit-card entry form, I got my $300 credit for GCP.

%img(src='/lesson012/lesson012a.png')
%hr/

%p If you encounter problems with the credit-card entry form, complain to Google, maybe they will fix it.

%p After I clicked through the credit-card flow, I clicked on the icon for "Compute Engine".

%img(src='/lesson012/lesson012b.png')
%hr/

%p GCP needed about 90 seconds to "get ready".

%p Then it offered me a screen to create a new VM-Instance.

%img(src='/lesson012/lesson012c.png')
%hr/

%p I clicked the "quickstart" button.

%p A window appeared which offered informational links rather than a quick-start of a VM-Instance.

%p So, I dismissed the window and clicked the blue "Create" button.

%p It offered me a form allowing me to customize a new VM-Instance.

%img(src='/lesson012/lesson012d.png')
%hr/

%p I assumed that the default selections were good enough and I clicked the blue "Create" button.

%p It used 90 seconds to create an instance and then served me a status page.

%img(src='/lesson012/lesson012e.png')
%hr/

%p In that page I clicked the small-black-SSH link.

%p GCP served me a new window with a Bash-shell prompt in it.

%img(src='/lesson012/lesson012f.png')
%hr/

%p I disliked the small font and black background so I changed it with the gear icon.

%img(src='/lesson012/lesson012g.png')
%hr/

%p Next, I asked google.com a simple question:

%a(href="https://www.google.com/search?q=What+are+the+GCP+shell+commands") https://www.google.com/search?q=What+are+the+GCP+shell+commands?

%p Google served me some links and I learned from those links that GCP has two main shell commands:

%ul
  %li gcloud
  %li gsutil

%p Next, in my Chrome browser, I visited this URL:

%p
  %a(href="https://console.cloud.google.com/compute") https://console.cloud.google.com/compute

%p At the top, I clicked the blue-link: "CREATE INSTANCE".

%p It served a page to me which looked familiar:

%img(src='/lesson012/lesson012h.png')
%hr/

%p At the bottom, I did not click the blue-"Create" button.

%p Instead, I clicked the blue link: "command line".

%p GCP served me command-line-syntax:

%img(src='/lesson012/lesson012i.png')
%hr/

%p I grabbed that syntax with my mouse, and then enhanced it, so you can see it better:

.syntax
  %pre
    =render 'lesson012j'

%p Next, I used my mouse and vim to place the un-enhanced "command line" syntax into a file on the VM-instance I had started earlier.

%img(src='/lesson012/lesson012k.png')
%hr/

%p I saved that file and ran it as a Bash command.

%img(src='/lesson012/lesson012m.png')
%hr/

%p GCP complained.

%img(src='/lesson012/lesson012n.png')
%hr/

%p I responded with a Bash command:

.syntax
  %pre
    %code gcloud auth login

%p That command entered me into a dialog with a browser window and my bash prompt.

%p After that dialog I tried this command again:

.syntax
  %pre
    %code bash gcloud10.bash

%p It responded favorably:

%img(src='/lesson012/lesson012p.png')
%hr/

%p Next, I wrote a Python script to let  gcloud10.bash act as a template.

%p The Python script created five other Bash scripts from the template.

%p Also, the Python script ran each of the Bash scripts.

%p The Python script is listed below:

.syntax
  %pre
    =render 'lesson012q'

%p I ran the Python script and collected output for you to see:

%img(src='/lesson012/lesson012r.png')
%hr/

%p I visited this URL:

%p
  %a(href="https://console.cloud.google.com/compute") https://console.cloud.google.com/compute

%p I saw evidence that the Python script worked well:

%img(src='/lesson012/lesson012s.png')
%hr/

%p In the above page I used my mouse to "Delete" all of the instances listed.

%p I no longer needed them and I wanted to avoid cloud charges to accumulate in my account.

%h1#top Lesson 012 [ GCP Python API ]

%p I started this lesson by using a Chrome browser to login to my gmail account.

%p Then I visited the URL listed below:
%p
  %a(href="https://console.cloud.google.com") https://console.cloud.google.com

%p It showed me a "Dashboard" for a Project named "My First Project".

%p I noted that the project_id was this string: "shining-sol-241621"


%img(src='/lesson012/lesson012s1.png')
%hr/

%p I clicked the "hamburger-icon" in upper left.
%p I clicked "IAM & admin" on the left.
%p I clicked "Service accounts" on the left.
%p I was now at this URL:
%p https://console.cloud.google.com/iam-admin/serviceaccounts?project=shining-sol-241621

%img(src='/lesson012/lesson012s2.png')
%hr/

%p At the top, I clicked the blue-link: "CREATE SERVICE ACCOUNT".
%p GCP served me a form.
%p I decided to call my new Service-Account this name: "srvacct"
%p I gave it this description: "Python API Training Account"

%img(src='/lesson012/lesson012s3.png')
%hr/

%p I clicked the blue-"CREATE" button.
%p GCP served me a form allowing me to add permissions to "srvacct".
%p I experiemented with the form and eventually granted only one permission:
%p Project - Owner

%img(src='/lesson012/lesson012s4.png')
%hr/

%p Then, I clicked the blue-"CONTINUE" button.
%p Then, on the next page, I clicked the blue-"CREATE KEY" button.
%p Then, I chose JSON format.
%p GCP then placed a JSON file in the Downloads folder on my laptop.
%p I went to that folder and renamed the file to: secret.json.

%img(src='/lesson012/lesson012s5.png')
%hr/

%p I will use secret.json later.

%p Next, I visited the URL listed below:

%p
  %a(href="https://console.cloud.google.com/compute") https://console.cloud.google.com/compute

%img(src='/lesson012/lesson012t.png')
%hr/

%p I clicked the blue-"Create" button.

%p GCP served me an instance-creation form:

%img(src='/lesson012/lesson012u.png')
%hr/

%p The form allowed me to run the instance under "srvacct" instead of "Compute Engine default service account".

%p So, I selected "srvacct":

%img(src='/lesson012/lesson012u1.png')
%hr/

%p Then, I clicked the blue-"Create" button.

%p After 90 seconds, GCP served me information about a new instance:

%img(src='/lesson012/lesson012v.png')
%hr/

%p On the right, I clicked the SSH link.

%p Quickly, GCP served me a Bash-shell running in the instance inside a new window :

%img(src='/lesson012/lesson012w.png')
%hr/

%p Next, I used the gear icon in my GCP-shell-window to copy secret.json from my laptop to the GCP-instance home folder.
%p Next, I issued Bash-shell commands in the GCP-shell-window:
.syntax
  %pre
    %code.bash
      echo 'export GOOGLE_APPLICATION_CREDENTIALS=$HOME/secret.json' >> ~/.bashrc
      bash
      env | grep GOOGLE
      cat $GOOGLE_APPLICATION_CREDENTIALS

%img(src='/lesson012/lesson012w1a.png')
%hr/

%p I issued more Bash commands:
.syntax
  %pre
    %code.bash
      sudo apt install python3-pip
      sudo pip3 install -U google-api-python-client
      pip3 list

%img(src='/lesson012/lesson012w2.png')
%hr/

%p Next, I started the nano editor with Bash commands:
.syntax
  %pre
    %code.bash
      cd ~
      nano gcp1.py

%p I moused-in syntax and saved it:

.syntax
  %pre
    =render 'lesson012x'

%p I checked that the project listed in gcp1.py matched the project in secret.json:

.syntax
  %pre
    %code
      cd ~
      grep project gcp1.py
      grep project secret.json

%p I ran the python script with a Bash command

.syntax
  %pre
    %code.bash
      cd ~
      python3 gcp1.py

%p I saw this:


%img(src='/lesson012/lesson012y.png')
%hr/

%p It worked.
%p Yay!
